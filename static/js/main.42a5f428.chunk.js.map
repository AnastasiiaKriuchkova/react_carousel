{"version":3,"sources":["components/Carousel.tsx","components/settings/Settings.tsx","App.tsx","index.tsx"],"names":["Carousel","images","width","frameSize","step","animationDuration","infinite","useState","index","setIndex","maxIndex","length","atStart","atEnd","carouselStyle","imageStyle","transition","transform","className","style","map","image","src","alt","type","onClick","prevIndex","disabled","defaultSettings","Settings","handleChange","htmlFor","id","name","min","value","onChange","checked","App","state","event","target","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42a5f428.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite?: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  width,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [index, setIndex] = useState(0);\n\n  const maxIndex = images.length - frameSize;\n  const atStart = !index && !infinite;\n  const atEnd = index === images.length - frameSize && !infinite;\n\n  const carouselStyle = {\n    width: `${width * frameSize}px`,\n  };\n\n  const imageStyle = {\n    transition: `transform ${animationDuration}ms ease-in-out`,\n    transform: `translateX(-${index * width}px)`,\n  };\n\n  const handleNext = () => {\n    if (index < maxIndex) {\n      return setIndex((prevIndex) => {\n        return prevIndex + step <= maxIndex ? prevIndex + step : maxIndex;\n      });\n    }\n\n    return setIndex(0);\n  };\n\n  const handlePrev = () => {\n    if (index > 0) {\n      return setIndex((prevIndex) => {\n        return prevIndex - step > 0 ? prevIndex - step : 0;\n      });\n    }\n\n    return setIndex(maxIndex);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__frame\" style={carouselStyle}>\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li\n              key={image}\n              className=\"Carousel__item\"\n              style={imageStyle}\n            >\n              <img\n                src={image}\n                alt={`Carousel item ${image}`}\n                width={width}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"buttons\">\n          <button\n            className=\"btn btn-left\"\n            type=\"button\"\n            onClick={handlePrev}\n            disabled={atStart}\n          >\n            &#8249;\n          </button>\n\n          <button\n            className=\"btn btn-right\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={handleNext}\n            disabled={atEnd}\n          >\n            &#8250;\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Settings.scss';\n\ninterface Props {\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst defaultSettings = {\n  width: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nconst Settings = ({\n  width,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n  handleChange,\n}: Props) => {\n  return (\n    <div className=\"settings\">\n      <label className=\"settings__label\" htmlFor=\"itemId\">\n        Item width:\n        <input\n          id=\"itemId\"\n          className=\"settings__input\"\n          name=\"width\"\n          type=\"number\"\n          min={defaultSettings.width}\n          value={width}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"frameId\">\n        Frame size:\n        <input\n          id=\"frameId\"\n          className=\"settings__input\"\n          name=\"frameSize\"\n          type=\"number\"\n          min={defaultSettings.frameSize}\n          step=\"1\"\n          value={frameSize}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"stepId\">\n        Step:\n        <input\n          id=\"stepId\"\n          className=\"settings__input\"\n          name=\"step\"\n          type=\"number\"\n          min={defaultSettings.step}\n          step=\"1\"\n          value={step}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"durationId\">\n        Animation duration:\n        <input\n          id=\"durationId\"\n          className=\"settings__input\"\n          name=\"animationDuration\"\n          type=\"number\"\n          min={defaultSettings.animationDuration}\n          step=\"500\"\n          value={animationDuration}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"infiniteId\">\n        Infinite:\n        <input\n          id=\"infiniteId\"\n          className=\"settings__input\"\n          name=\"infinite\"\n          type=\"checkbox\"\n          checked={infinite}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport Settings from './components/settings/Settings';\n\ninterface State {\n  images: string[];\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    width: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'infinite') {\n      this.setState((prevState) => ({ infinite: !prevState.infinite }));\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      width,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    }\n      = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Settings\n          width={width}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          handleChange={this.handleChange}\n        />\n\n        <Carousel\n          images={images}\n          width={width}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}