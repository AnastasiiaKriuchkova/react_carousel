{"version":3,"sources":["components/Carousel.tsx","components/settings/Settings.tsx","App.tsx","index.tsx"],"names":["Carousel","images","width","frameSize","step","animationDuration","infinite","useState","index","setIndex","maxIndex","length","atStart","atEnd","className","style","map","image","i","isVisible","transition","transform","src","alt","height","opacity","toString","type","onClick","prevIndex","disabled","defaultSettings","Settings","handleChange","htmlFor","id","name","min","value","onChange","checked","App","state","event","target","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oSAyGeA,EA7FmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWT,EAAOU,OAASR,EAC3BS,EAAoB,IAAVJ,IAAgBF,EAC1BO,EAAQL,IAAUP,EAAOU,OAASR,IAAcG,EAwBtD,OACE,qBAAKQ,UAAU,WAAf,SACE,sBAAKA,UAAU,kBAAkBC,MAAO,CAAEb,MAAOA,EAAQC,GAAzD,UACE,oBAAIW,UAAU,iBAAd,SACGb,EAAOe,KAAI,SAACC,EAAOC,GAClB,IAAMC,EAAYD,GAAKV,GAASU,EAAI,IAAM,EAAIV,GAASL,EAEvD,OACE,oBAEEW,UAAU,iBACVC,MAAO,CACLK,WAAW,aAAD,OAAef,EAAf,kBACVgB,UAAU,eAAD,OAAiBb,EAAQN,EAAzB,QALb,SAQE,qBACEoB,IAAKL,EACLM,IAAG,wBAAmBN,GACtBF,MAAO,CACLb,QACAsB,OAAQtB,EACRuB,QAASN,EAAY,EAAI,EACzBC,WAAW,WAAD,OAAaf,EAAb,mBAEZH,MAAOA,EAAMwB,cAhBVT,QAuBb,sBAAKH,UAAU,UAAf,UACE,wBACEA,UAAU,eACVa,KAAK,SACLC,QAhDS,WACjB,OACSnB,EADLH,GAAYE,EAAQJ,GAAQ,EACd,SAACyB,GAGf,OAAOA,EAAYzB,EAFF,IAE+ByB,EAAYzB,GAIhD,IAwCR0B,SAAUlB,EAJZ,oBASA,wBACEE,UAAU,gBACVa,KAAK,SACL,UAAQ,OACRC,QApES,WACjB,OAAItB,GAAYE,EAAQJ,EAAOH,EAAOU,OAC7BF,GAAS,SAACoB,GACf,OAAOA,EAAYzB,EAAOM,EAAWA,EAAWmB,EAAYzB,KAIzDK,EAASC,IA8DRoB,SAAUjB,EALZ,6BC9EJkB,G,MACG,KADHA,EAEO,EAFPA,EAGE,EAHFA,EAIe,IAoFNC,EAhFE,SAAC,GAOJ,IANZ9B,EAMW,EANXA,MACAC,EAKW,EALXA,UACAC,EAIW,EAJXA,KACAC,EAGW,EAHXA,kBACAC,EAEW,EAFXA,SACA2B,EACW,EADXA,aAEA,OACE,sBAAKnB,UAAU,WAAf,UACE,wBAAOA,UAAU,kBAAkBoB,QAAQ,SAA3C,wBAEE,uBACEC,GAAG,SACHrB,UAAU,kBACVsB,KAAK,QACLT,KAAK,SACLU,IAAKN,EACLO,MAAOpC,EACPqC,SAAUN,OAId,wBAAOnB,UAAU,kBAAkBoB,QAAQ,UAA3C,wBAEE,uBACEC,GAAG,UACHrB,UAAU,kBACVsB,KAAK,YACLT,KAAK,SACLU,IAAKN,EACL3B,KAAK,IACLkC,MAAOnC,EACPoC,SAAUN,OAId,wBAAOnB,UAAU,kBAAkBoB,QAAQ,SAA3C,kBAEE,uBACEC,GAAG,SACHrB,UAAU,kBACVsB,KAAK,OACLT,KAAK,SACLU,IAAKN,EACL3B,KAAK,IACLkC,MAAOlC,EACPmC,SAAUN,OAId,wBAAOnB,UAAU,kBAAkBoB,QAAQ,aAA3C,gCAEE,uBACEC,GAAG,aACHrB,UAAU,kBACVsB,KAAK,oBACLT,KAAK,SACLU,IAAKN,EACL3B,KAAK,MACLkC,MAAOjC,EACPkC,SAAUN,OAId,wBAAOnB,UAAU,kBAAkBoB,QAAQ,aAA3C,sBAEE,uBACEC,GAAG,aACHrB,UAAU,kBACVsB,KAAK,WACLT,KAAK,WACLa,QAASlC,EACTiC,SAAUN,WC/EdQ,E,4MACJC,MAAQ,CACNzC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,MAAO,IACPC,UAAW,EACXC,KAAM,EACNC,kBAAmB,IACnBC,UAAU,G,EAGZ2B,aAAe,SAACU,GACd,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAED,aAATF,EAMJ,EAAKS,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXV,GAAQE,OAPT,EAAKO,UAAS,SAACC,GAAD,MAAgB,CAAExC,UAAWwC,EAAUxC,c,4CAWzD,WACE,MAQIyC,KAAKL,MAPPzC,EADF,EACEA,OACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAIF,OACE,sBAAKQ,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOU,OAA1C,aAEA,cAAC,EAAD,CACET,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,kBAAmBA,EACnBC,SAAUA,EACV2B,aAAcc,KAAKd,eAGrB,cAAC,EAAD,CACEhC,OAAQA,EACRC,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,kBAAmBA,EACnBC,SAAUA,W,GAnEF0C,IAAMC,WA0ETR,ICrFfS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4a9c0e6d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite?: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  width,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [index, setIndex] = useState(0);\n\n  const maxIndex = images.length - frameSize;\n  const atStart = index === 0 && !infinite;\n  const atEnd = index === images.length - frameSize && !infinite;\n\n  const handleNext = () => {\n    if (infinite || index + step < images.length) {\n      return setIndex((prevIndex) => {\n        return prevIndex + step > maxIndex ? maxIndex : prevIndex + step;\n      });\n    }\n\n    return setIndex(maxIndex);\n  };\n\n  const handlePrev = () => {\n    if (infinite || index - step >= 0) {\n      return setIndex((prevIndex) => {\n        const minIndex = 0;\n\n        return prevIndex - step < minIndex ? minIndex : prevIndex - step;\n      });\n    }\n\n    return setIndex(0);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__frame\" style={{ width: width * frameSize }}>\n        <ul className=\"Carousel__list\">\n          {images.map((image, i) => {\n            const isVisible = i >= index && i + 1 <= (1 + index) * frameSize;\n\n            return (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n                style={{\n                  transition: `transform ${animationDuration}ms ease-in-out`,\n                  transform: `translateX(-${index * width}px)`,\n                }}\n              >\n                <img\n                  src={image}\n                  alt={`Carousel item ${image}`}\n                  style={{\n                    width,\n                    height: width,\n                    opacity: isVisible ? 1 : 0,\n                    transition: `opacity ${animationDuration}ms ease-in-out`,\n                  }}\n                  width={width.toString()}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"buttons\">\n          <button\n            className=\"btn btn-left\"\n            type=\"button\"\n            onClick={handlePrev}\n            disabled={atStart}\n          >\n            &#8249;\n          </button>\n\n          <button\n            className=\"btn btn-right\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={handleNext}\n            disabled={atEnd}\n          >\n            &#8250;\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Settings.scss';\n\ninterface Props {\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst defaultSettings = {\n  width: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nconst Settings = ({\n  width,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n  handleChange,\n}: Props) => {\n  return (\n    <div className=\"settings\">\n      <label className=\"settings__label\" htmlFor=\"itemId\">\n        Item width:\n        <input\n          id=\"itemId\"\n          className=\"settings__input\"\n          name=\"width\"\n          type=\"number\"\n          min={defaultSettings.width}\n          value={width}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"frameId\">\n        Frame size:\n        <input\n          id=\"frameId\"\n          className=\"settings__input\"\n          name=\"frameSize\"\n          type=\"number\"\n          min={defaultSettings.frameSize}\n          step=\"1\"\n          value={frameSize}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"stepId\">\n        Step:\n        <input\n          id=\"stepId\"\n          className=\"settings__input\"\n          name=\"step\"\n          type=\"number\"\n          min={defaultSettings.step}\n          step=\"1\"\n          value={step}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"durationId\">\n        Animation duration:\n        <input\n          id=\"durationId\"\n          className=\"settings__input\"\n          name=\"animationDuration\"\n          type=\"number\"\n          min={defaultSettings.animationDuration}\n          step=\"500\"\n          value={animationDuration}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"settings__label\" htmlFor=\"infiniteId\">\n        Infinite:\n        <input\n          id=\"infiniteId\"\n          className=\"settings__input\"\n          name=\"infinite\"\n          type=\"checkbox\"\n          checked={infinite}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport Settings from './components/settings/Settings';\n\ninterface State {\n  images: string[];\n  width: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    width: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'infinite') {\n      this.setState((prevState) => ({ infinite: !prevState.infinite }));\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      width,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    }\n      = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Settings\n          width={width}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          handleChange={this.handleChange}\n        />\n\n        <Carousel\n          images={images}\n          width={width}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}